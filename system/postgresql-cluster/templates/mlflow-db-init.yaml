{{- if .Values.mlflow.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: mlflow-db-init
  namespace: postgresql-cluster
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/hook: PostSync
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: db-init
        image: postgres:15-alpine
        env:
        - name: PGHOST
          value: postgresql-cluster-rw
        - name: PGPORT
          value: "5432"
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for PostgreSQL cluster to be ready..."
          until pg_isready; do
            echo "PostgreSQL not ready, waiting..."
            sleep 5
          done
          
          echo "Creating mlflow database and user..."
          psql -c "CREATE DATABASE {{ .Values.mlflow.database }};" || echo "Database {{ .Values.mlflow.database }} already exists"
          psql -c "CREATE USER {{ .Values.mlflow.user }} WITH PASSWORD '{{ .Values.mlflow.password }}';" || echo "User {{ .Values.mlflow.user }} already exists"
          psql -c "GRANT ALL PRIVILEGES ON DATABASE {{ .Values.mlflow.database }} TO {{ .Values.mlflow.user }};" || echo "Privileges already granted"
          psql -d {{ .Values.mlflow.database }} -c "GRANT ALL ON SCHEMA public TO {{ .Values.mlflow.user }};" || echo "Schema privileges already granted"
          
          echo "MLflow database setup completed successfully"
{{- end }}